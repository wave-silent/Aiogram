from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher.filters import Text
from aiogram.types import ReplyKeyboardRemove

from Project1_keyboards import kb, ikb, kb_photo
import random

TOKEN_API = '8386228254:AAG4-AycDrNYlQj-5kqMyyU2nebq1aINcds'
bot = Bot(TOKEN_API)
dp = Dispatcher(bot)

HELP_COMMAND = '''
<b>/start</b> - <em>–°—Ç–∞—Ä—Ç –±–æ—Ç–∞</em>
<b>/help</b> - <em>–ü–µ—Ä–µ—á–µ–Ω—å –∫–æ–º–∞–Ω–¥</em>
<b>/description</b> - <em>–û–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞</em>
'''

sp_photos = ['https://i.pinimg.com/736x/b6/5f/c2/b65fc25b19abdee5b2caa3e6f07f261f.jpg', 'https://i.pinimg.com/originals/56/b1/76/56b1760aafdcfb3116d5769d04cd6b5c.jpg',
             'https://avatars.mds.yandex.net/get-mpic/4322217/img_id909093120241748224.jpeg/orig']

photos = dict(zip(sp_photos, ['Lake', 'Sea', 'Mountain']))      #–£–¥–æ–±–Ω–æ, —Å –ø–æ–º–æ—â—å—é —ç—Ç–æ–π —Å—Ç—Ä–æ—á–∫–∏, –º—ã —Å–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å–æ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞—à–∏—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
random_photo = random.choice(list(photos.keys()))

flag = False

async def on_startup(_):
    print('–Ø –±—ã–ª –∑–∞–ø—É—â–µ–Ω!')


async def send_random(message: types.Message):
    global random_photo
    random_photo = random.choice(list(photos.keys()))
    await bot.send_photo(chat_id=message.chat.id, photo=random_photo,
                         caption=photos[random_photo],
                         reply_markup=ikb)

async def l_kb_photo(message: types.Message):
    await message.answer(text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
                         reply_markup=kb)
    await message.delete()

@dp.message_handler(Text(equals='menu_photo'))
async def open_kb_photo(message: types.Message):
    await message.answer(text='–†–∞–Ω–¥–æ–º–Ω–∞—è —Ñ–æ—Ç–∫–∞!',
                         reply_markup=ReplyKeyboardRemove())
    await send_random(message)
    await message.delete()


@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await bot.send_message(chat_id=message.from_user.id, text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç!',
                           reply_markup=kb)
    await message.delete()

@dp.message_handler(commands=['help'])
async def help_command(message: types.Message):
    await bot.send_message(chat_id=message.from_user.id, text=HELP_COMMAND, parse_mode='HTML',
                           reply_markup=kb)
    await message.delete()

@dp.message_handler(commands=['description'])
async def description_command(message: types.Message):
    await bot.send_message(chat_id=message.from_user.id, text='–ù–∞—à –±–æ—Ç —É–º–µ–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ä–∞–Ω–¥–æ–º–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º',
                           reply_markup=kb)
    await message.delete()


@dp.callback_query_handler()
async def callback_command(callback: types.CallbackQuery):
    global random_photo, flag       # –ù–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    if callback.data == 'like':
        if not flag:
            await callback.answer(text='–¢–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å —ç—Ç–æ —Ñ–æ—Ç–æ!')
            flag = not flag
        else:
            await callback.answer('–í—ã —É–∂–µ –ª–∞–π–∫–∞–ª–∏!')


    elif callback.data == 'dislike':
        await callback.answer(text='–¢–µ–±–µ –Ω–µ –∑–∞—à–ª–∞ —ç—Ç–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞, –æ —á–µ—Ä—Ç!')

    elif callback.data == 'main_menu':
        await l_kb_photo(message=callback.message)
        await callback.answer()

    else:
        random_photo = random.choice(list(filter(lambda x: x != random_photo, list(photos.keys()))))
        await callback.message.edit_media(types.InputMedia(media=random_photo,
                                          type='photo',
                                          caption=photos[random_photo]),
                                          reply_markup=ikb)
        await callback.answer()


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True, on_startup=on_startup)



# –í –¥—Ä—É–≥–æ–º –º–æ–¥—É–ª–µ –Ω–∞–ø–∏—Å–∞–Ω–æ
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton

kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
b1 = KeyboardButton('/help')
b2 = KeyboardButton('/description')
b3 = KeyboardButton('menu_photo')
kb.add(b1).insert(b2).add(b3)

kb_photo = ReplyKeyboardMarkup(resize_keyboard=True)
bp1 = KeyboardButton(text='send_photo')
bp2 = KeyboardButton(text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
kb_photo.add(bp1, bp2)

ikb = InlineKeyboardMarkup(row_width=2)
ib1 = InlineKeyboardButton(text='‚ù§Ô∏è', callback_data='like')
ib2 = InlineKeyboardButton(text='üí©', callback_data='dislike')
ib3 = InlineKeyboardButton(text='–°–ª–µ–¥—É—é—â–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞', callback_data='next')
ib4 = InlineKeyboardButton(text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='main_menu')
ikb.add(ib1, ib2).add(ib3).add(ib4)
